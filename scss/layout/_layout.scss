.container{

  display: grid;
  width: 100%;
  position: relative;
  height: 100%;
  grid-template-columns: repeat(12, 1fr);
  grid-auto-flow: row dense;
  row-gap: 2rem;
  column-gap: 1rem;

  @include rwd(medium){
    width: 70vw;
    display: grid;
    height: 100%;
    grid-template-columns: repeat(12, 1fr);
    margin-left: 15vw;
    margin-right: 15vw;

    @for $i from 1 through 12{
      .col-md-#{$i}{
        grid-column: span #{$i};
      }
    }

  }

  @include rwd(large){
    width: 70vw;
    display: grid;
    height: 100%;
    grid-template-columns: repeat(12, 1fr);
    min-width: 69vw;
    margin-left: 15vw;
    margin-right: 15vw;

    @for $i from 1 through 12{
      .col-lg-#{$i}{
        grid-column: span #{$i};
      }
    }

  }


  &--expanded{
    margin-left: 0;
    width: 100%;
    margin-right: 0;
  }


}

[class^="col"]{
  display: flex;
}
@for $i from 1 through 12{
  .col-sm-#{$i}{
    grid-column: span #{$i};
  }
}

@include rwd(0, 768px){
  .d-sm-none{
    display: none;
  }
  @for $i from 1 through 12{
    .os-sm-#{$i}{
      margin-left: calc(#{$i}*(100vw / 12 ));
    }
    .pull-sm-#{$i}{
      margin-right: calc(#{$i}*(100vw / 12 ));
    }
  }

}

@include rwd(medium, large){
  .d-md-none{
    display: none;
  }

  @for $i from 1 through 12{
    .os-md-#{$i}{
      margin-left: calc(#{$i}*(100vw / 12 ));
    }
    .pull-md-#{$i}{
      margin-right: calc(#{$i}*(100vw / 12 ));
    }
  }
}

@include rwd(large){
  .d-lg-none{
    display: none;
  }

  @for $i from 1 through 12{
    .os-lg-#{$i}{
      margin-left: calc(#{$i}*(100vw / 12 ));
    }
    .pull-lg-#{$i}{
      margin-right: calc(#{$i}*(100vw / 12 ));
    }
  }

}


@for $i from 1 through 12{

  .col-#{$i}{
    grid-column: span #{$i};
  }

}

.flex{
  display: flex;
}

.flex--reverse{
  flex-direction: row-reverse;
}

.flex--column{
  display: flex;
  flex-direction: column;
}

.flex--column--reverse{
  flex-direction: column-reverse;
}

.jc--center{
  justify-content:center;
}

.jc--end{
  justify-content: flex-end;
}

.jc--around{
  justify-content: space-around;
}

.jc--between{
  justify-content: space-between;
}

.ai--center{
  align-items:center;
}

.ai--end{
  align-items:flex-end;
}

.ai--around{
  align-items:space-around;
}

.ai--between{
  align-items:space-between;
}

.as--center{
  align-self:center;
}

.as--end{
  align-self:flex-end;
}

.as--around{
  align-self:space-around;
}

.as--between{
  align-self:space-between;
}


.text--small{
  font-size: var(--text-small);
}
.text--medium{
  font-size: var(--text-medium);
}
.text--large{
  font-size: var(--text-large);
}
.text--center{
  text-align: center;
}

.z-back{
  z-index: var(--z-back);
}
.z-normal{
  z-index: var(--z-normal);
}
.z-tooltip{
  z-index: var(--z-tooltip);
}
.z-fixed{
  z-index: var(--z-fixed);
}
.z-modal{
  z-index: var(--z-modal);
}

.relative{
  position: relative;
}

.absolute{
  position: absolute;
}

$positions: top ,bottom ,left ,right;

@for $i from 1 through length($positions){

  @for $x from 1 through 5{

    .m#{str-slice(nth($positions, $i),1,1)}-#{$x}{
      margin-#{nth($positions, $i)}: $x * 1rem;
    }

    @include rwd(medium, large){
      .m-md-#{str-slice(nth($positions, $i),1,1)}-#{$x}{
        margin-#{nth($positions, $i)}: $x * 1rem;
      }
    }
    @include rwd(large){
      .m-lg-#{str-slice(nth($positions, $i),1,1)}-#{$x}{
        margin-#{nth($positions, $i)}: $x * 1rem;
      }
    }

    @include rwd(0, 768px){
      .m-sm-#{str-slice(nth($positions, $i),1,1)}-#{$x}{
        margin-#{nth($positions, $i)}: $x * 1rem;
      }
    }

  }


}

@for $x from 1 through 5{
  .p-#{$x}{
    padding: $x * 1rem;
  }
  .m-#{$x}{
    margin: $x * 1rem;
  }

}

@for $i from 1 through length($positions){

  @for $x from 1 through 5{

    .p#{str-slice(nth($positions, $i),1,1)}-#{$x}{
      padding-#{nth($positions, $i)}: $x * 1rem;
    }

    @include rwd(medium, large){
      .p-md-#{str-slice(nth($positions, $i),1,1)}-#{$x}{
        padding-#{nth($positions, $i)}: $x * 1rem;
      }
    }
    @include rwd(large){
      .p-lg-#{str-slice(nth($positions, $i),1,1)}-#{$x}{
        padding-#{nth($positions, $i)}: $x * 1rem;
      }
    }
    @include rwd(0, medium){
      .p-sm-#{str-slice(nth($positions, $i),1,1)}-#{$x}{
        padding-#{nth($positions, $i)}: $x * 1rem;
      }
    }
  }
}
.m-none{
  margin: 0;
}
.w-100{
  width: 100%;
}
